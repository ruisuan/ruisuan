name: Otimizar Imagens Alteradas

on:
  push:
    branches:
      - main

jobs:
  image_optimization:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Verificar mudanças em imagens
        id: image_changes
        run: |
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "::set-output name=changed_files::$CHANGED_FILES"
      
      - name: Filtrar imagens modificadas
        id: filter_images
        run: |
          CHANGED_IMAGES=$(echo "${{ steps.image_changes.outputs.changed_files }}" | grep -E '\.(png|jpg|jpeg)$' || true)
          if [ -z "$CHANGED_IMAGES" ]; then
            echo "Nenhuma imagem modificada."
            exit 0
          fi
          echo "$CHANGED_IMAGES" > changed_images.txt
        continue-on-error: true

      - name: Instalar otimizadores de imagem
        run: sudo apt-get install -y optipng jpegoptim

      - name: Otimizar PNGs modificados
        if: success()
        run: |
          while read -r IMAGE; do
            if [[ $IMAGE == *.png ]]; then
              optipng -o7 "$IMAGE"
            fi
          done < changed_images.txt

      - name: Otimizar JPEGs modificados
        if: success()
        run: |
          while read -r IMAGE; do
            if [[ $IMAGE == *.jpg || $IMAGE == *.jpeg ]]; then
              jpegoptim --max=85 "$IMAGE"
            fi
          done < changed_images.txt

      - name: Gerar resumo da otimização
        if: success()
        run: |
          echo "| Imagem | Tamanho Original | Tamanho Otimizado |" > image_summary.md
          echo "|--------|------------------|-------------------|" >> image_summary.md
          while read -r IMAGE; do
            ORIGINAL_SIZE=$(git cat-file -s HEAD^:"$IMAGE")
            OPTIMIZED_SIZE=$(stat -c%s "$IMAGE")
            echo "| $IMAGE | $ORIGINAL_SIZE bytes | $OPTIMIZED_SIZE bytes |" >> image_summary.md
          done < changed_images.txt

      - name: Criar nova branch
        run: |
          git checkout -b otimizar-imagens-$(date +%s)
          git add .
          git commit -m "Imagens otimizadas"

      - name: Push da nova branch
        run: |
          git push origin HEAD

      - name: Criar Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Otimização de imagens"
          title: "Otimização de imagens alteradas"
          body: |
            As seguintes imagens foram otimizadas:
            $(cat image_summary.md)
          branch: main
          branch-suffix: timestamp
        continue-on-error: true
